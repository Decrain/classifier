如果你的App有離線數據下載功能，尤其需要關注這一點。因爲離線數據一般佔用存儲空間比較大，可以被重新下載和重建，但是用戶往往希望系統存儲空間緊時也依然能夠妥妥的存在着，不會被IOS系統自動清理掉。所以不能放在/Library/Caches目錄下（該目錄在系統空間緊張時可能會被iOS系統清除）。那就只能放在主目錄/Documents或主目錄/Library/自定義文件夾下，這樣纔不會被iOS系統自動清理掉。但是這些數據可能會很大，如果放在主目錄/Documents或主目錄/Library/自定義的文件夾下，會被iCoud自動同步，那麼用戶需要爲了同步消耗不少流量，蘋果可能會因此拒絕你的應用上架。所以需要在程序中給自定義的目錄設置「donotbackup」屬性。

內容：用戶創建的數據文件，無法在刪除後自動重新創建

管理：iOS系統即時遇到存儲空間不足的情況下，也不會清除，同時會備份到iTunes或iCloud中

內容：可用於離線環境，可被重複下載重複生成，即使在離線時缺失，應用本身也可以正常運行

管理：在存儲空間不足的情況下，會清空，並且不會被自動備份到iTunes和iCloud中

管理：隨時可能被iOS系統清除，且不會自動備份到iTunes和iCloud，儘量在文件不再使用時，應用自己清空，避免對用戶設備空間的浪費

內容：與緩存數據類似，可以被重新下載和重建，但是用戶往往希望這些數據即使在存儲緊張時也不會被系統自動刪除

管理：與關鍵數據類似，即使在存儲空間不足的情況下也不會被清除，應用自己應該清除已經不再使用的文件，以免浪費用戶設備空間。需要設置」不備份到iCoud"，否則會審覈不過。

如果你的App有部分功能需要登錄才能使用，那麼你需要再提交審覈時，勾選演示賬戶，並提供對應信息，如下圖：

現在很多app爲了更方便快捷，防止用戶忘記密碼，都採用手機號+驗證碼的方式，這樣的話就沒有辦法給蘋果提供演示賬戶了，除非賬戶系統後臺做修改提供支持。這種情況，就不需要勾選演示賬戶了，但是要在備註信息裏跟蘋果好好解釋一下，說我們也是爲了提升用戶體驗的，所以對賬戶系統做了改進，用戶有手機就能登錄，不需要註冊啥的，如下圖。如果你啥也不說的話，那就乖乖等着被拒吧。

這裏指的硬件是不需要MFi認證的，通過BLE（低功耗藍牙）或者WiFi連接的硬件。直接在備註裏提供相關功能的演示視頻即可，如下圖。

演示視頻需要把完整的連接過程操作以及連接硬件之後跟硬件相關的功能演示都包含在內。從截圖可以看到我的「褲寶」演示視頻我是直接放在優酷上了。所以並不像傳聞中那樣，需要翻牆放到YouTube上，直接放優酷土豆或者百度網盤都行。也不需要用英文，用中文即可。

如果你的App是需要跟通過MFi認證的硬件進行交互，即使用了EA框架（ExternalAccessory.framework），配置了協議字符串（Supportedexternalaccessoryprotocols），那麼你需要在備註信息裏提供PPID。

很多時候，我們的App可以同時適配很多型號的硬件，每個型號的硬件對應的PPID不一樣。如果AppStore提交審覈通過之後，又新增了一款型號硬件支持怎麼辦呢？是否需要單獨發一個版本，把對應的PPID增加上去了？答案是不需要，因爲App支持的PPID列表信息是放在備註信息裏面的，往列表中新增PPID並不需要修改到二進制文件信息，蘋果在這裏也比較人性化，可以在不提交新版本的情況下增加PPID信息。

之前使用後臺定位功能的app都是隻需要在在Info.plist中配置Requiredbackgroundmodes-Appregistersforlocationupdates即可.但是從2016年的某個時候開始蘋果突然要求如果App要使用定位功能，除了程序裏做配置，還需要在界面上顯式告訴用戶你的後臺定位是用來幹啥的，否則你就會收到類似下面的郵件。

要修改也可以簡單，根據你的app需要在info.plist中配置，NSLocationAlwaysUsageDeion或者NSLocationWhenInUseUsageDeion字段說明。如下圖

AppStore提供的屏幕快照功能是爲了用戶在未下載時可以直觀的瞭解這個App的功能、界面大概是什麼樣的。所以蘋果也允許開發者對屏幕截屏做一些加工美化，並不一定要是原始截屏。但是這裏有個限度，就是不能相差太遠，具體尺度蘋果沒有給出量化標準。公司項目中有個大版本上線了一個比較大的新功能，爲了突出宣傳這個功能，設計師就重新設計了一套非常Q版的功能演示截圖。結果上傳後被蘋果告知，屏幕快照不符合App本身的功能。

以上這些是本人在AppStore審覈時親自踩過的一些坑，當然還有很多坑，我和我的團隊注意到了所以努力避免了，但是個人認爲也是非常需要注意的，我簡單列在下面供大家參考。

我們說了這麼多踩過的坑，或者差點踩過的坑，無非就是想在以後App開發中儘可能的避免。這裏介紹本人的一些經驗總結，供大家參考。

對產品經理規劃的功能，首先需要判斷是否在技術上可以實現，或者說在不使用非公開API的前提下實現。因爲很多時候，即使你通過函數名動態拼接等技術手段在提交審覈時躲過API掃描，但是也難免被蘋果從功能上發現或者被競爭對手舉報。然後對交互設計和UI效果圖需要有自己的判斷，界面不能太醜，交互不能太複雜，不能使用跟系統太過雷同的Icon。

每個項目都需要沉澱發版前的checklist，把之前踩過的坑進行備忘，也可以通過網絡資訊等手段瞭解最近時間被拒的一些主要原因，把可能跟自己APP相關的部分進行備註，然後在發版前逐條檢查一遍。

如果也預防了，發版前也過了checklist，但是有時候還是難免百密一疏有所遺漏，特別是新功能較多的版本。這裏我要重點推薦的就是預提交AppStore審覈。項目的版本都是有發版週期的，一般在發版前一週左右App版本基本穩定，只是還需要修改一些bug並回歸測試。這個時候完全可以先提交一個版本到AppStore去審覈，反正版本號是用不完的，只要不佔用產品經理定的版本號就行。預提交審覈有什麼好處呢？

這個版本可能開發了一些新功能，然後有些地方可能沒有考慮到審覈相關的風險。如果等待項目都要結束正式發版時才暴露出來，就追悔莫及了。

(2)在迫不得已的情況下，可以試探一下蘋果的界限。

蘋果審覈條款其實很多時候是沒有一個量化標準的，比如屏幕快照不能跟App具體使用時的截屏相差太遠，拿到UI設計師給到屏幕快照時，我們有時候也沒有辦法確定到底是否真的符合蘋果的規範，但是沒有關係，我們先提交一個版本試一試就知道了；還有再比如前段時間，蘋果要求6月1號以後提交的App都要支持IPV6-Only的網絡。但是由於歷史原因，項目中有個功能用的是第三方的SDK，他們沒有辦法在我們發版前提供新的支持IPV6的版本。然後我看網上也有人分享說蘋果對這個要求並不是非常嚴格，只需要在iOS9下主要功能能支持IPV6就行了。當然作爲項目負責人，肯定也不能說直接把這個功能砍掉不要了，亦或輕信網友所言忽視風險。怎麼辦呢？趕緊先預提交一個版本試一下再做決定。結果是確實可以通過審覈，所以最終版本沒有砍掉這個功能，保證了產品的完整性上線了。

如果經過前面的努力，你還是被拒了，或者App的發佈要趕上某個時間運營節點，但是由於各種原因導致預留給App審覈的時間太少了。這個時候你需要使用到蘋果的加急審覈通道。

你在百度裏搜索iOS加急審覈，你會發現有很多宣稱可以幫你快速審覈的人，24小時通過審覈，審覈通過後付款，不通過不要錢。如果你不知道蘋果有官方的加急審覈功能，你就很容易被這些空手套白狼的人所騙，而且收費都是5000RMB起步。那我真的很想對你說，找我吧，給你友情價打5折。

蘋果的加急審覈如何使用呢？在iTunesconnect頁面，點擊右上角的「?」圖標，在彈出菜單中選擇「聯繫我們」，

最後在表格裏填寫相關信息，其中最重要的寫你需要加急審覈的原因。一般是寫要趕某個重大節日運營節點，或者緊急修復某個嚴重的閃退問題，然後註明閃退現象復現的詳細步驟，就可以了。

關於具體加急審覈有沒有次數限制，次數是跟App相關還是跟開發賬號相關，蘋果並沒有官方的說明。但是可以肯定的是，網上傳聞一年只有兩次加急審覈的機會是不正確的。不過爲了讓好鋼用在刀刃上，還是慎用這個功能，以防到時真的有需要加急審覈時卻得不到響應。

從今年上半年開始，app審覈時間大大縮短了，一般都不需要用到這個功能了。百度CarLife最近幾個版本都是3天就通過審覈了，尤其是最新的支持EAP連接的版本V2.1.0，一個晚上就審覈通過了。

毛主席告訴我們「與天奮鬥，其樂無窮！與地奮鬥，其樂無窮！與人奮鬥，其樂無窮！」，但是作爲iOS開發者，跟蘋果奮鬥，還是小心謹慎爲好。最後提一句，如果你知道你的app存在某個審覈風險，但是通過了蘋果審覈，那麼不要存在僥倖心理，請儘快修改。因爲畢竟蘋果是人工審覈，這個版本過了可能是審覈人員心情好，並不代表下個版本審覈時心情也這麼好。

其實想想最近的廣電總局手遊審查新政，對AppStore的審覈規則也就沒有啥可以抱怨的了。