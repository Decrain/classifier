【重要通知】2017新智元開源·生態AI技術峯會【倒計時2天，點擊「閱讀原文」搶票】新智元和行業領袖英特爾聯合舉辦，中國AI2017開年盛典啓幕在即。新智元327技術峯會暨頒獎盛典現場一律憑活動行二維碼入場，大會於3月27日8:00正式開始簽到，8:50會議開始，現場座位緊張請提前簽到入場。活動行在大會現場設有諮詢席位，但提前換二維碼節省簽到時間。請團購註冊的公司關注，務必提醒參會的同事們手機接收二維碼，如果不清晰可以打印出來，現場在簽到處換領大會嘉賓胸卡。

【新智元導讀】本文來自PaddlePaddle團隊，介紹了PaddlePaddle與衆不同的基於Docker的編譯、開發、測試、調試、發佈、部署、和運行的全流程及其背後的設計思路。

繼兩週前PaddlePaddle社區發佈新的PythonAPI之後，最近又發佈了對應的新版Docker鏡像，並優化了鏡像的體積和組織方式。

這些工作的目的是方便大家在單機和Kubernetes機羣上運行分佈式深度學習作業。當BaiduResearch官方Twitter賬號發佈這條消息並且被AndrewNg轉發後，收到了很多反饋。其中有朋友們好奇Docker在AI中的應用是不是「overkill」。其實這些工作都是爲了簡化用戶需要做的操作。只是Docker在AI系統中的應用還剛剛開始，大家可能還不熟悉，所以我們寫作本文，介紹PaddlePaddle與衆不同的基於Docker的編譯、開發、測試、調試、發佈、部署、和運行的全流程及其背後的設計思路。

除了PaddlePaddle本身，基於它開發的DeepLearning入門教材也是基於Dockerimage的形式發佈的。這本書中的每一章都是一個JupyterNotebook。而Dockerimage裏包括了Jupyterserver、PaddlePaddle和所有被依賴的軟件，所以大家不需要安裝軟件即可運行和瀏覽這本書，修改文中的例子程序並且執行和觀察變化。

引入Docker也使得我們不需要修改PaddlePaddle的源碼即可同時支持多種操作系統--Linux、Mac、Windows--因爲這些操作系統都可以運行Docker了。

而且PaddlePaddle的開發環境（各種軟件和配置）本身也被髮布爲一個Dockerimage，所以不僅是PaddlePaddle程序的用戶、基於PaddlePaddle開發AI程序的用戶，甚至PaddlePaddle的開發者，也都使用Dockercontainer來開發和調試。

如果不希望使用Docker運行Paddle應用，用戶可以使用開發環境鏡像快速編譯Paddle的.deb安裝包，直接安裝在企業的特定運行環境中運行！

《DeepLeanring101》這本書是在Github社區裏開發的一個PaddlePaddle應用程序。讓我們先從這本書開始，解釋PaddlePaddle應用開發和發佈的過程吧。

因爲PaddlePaddle社區已經把書籍的Docker鏡像發佈到了dockerhub.com，所以大家只需要執行一條命令即可運行這本書：

如果從國內訪問dockerhub.com速度慢，也可以訪問PaddlePaddle社區在香港維護的Dockerregistry服務：

隨後只需要在瀏覽器打開鏈接http://localhost:8888，選擇一個感興趣的章節，即可在瀏覽器裏閱讀書籍。界面如下圖所以。用戶可以點擊上方工具欄的「運行」按鈕來運行樣例代碼，查看輸出的結果，並對照書籍開始學習，體驗Paddle帶來的深度學習之旅。

如果大家好奇這本書的Docker鏡像的創建方法，可以參見這個腳本程序https://github.com/PaddlePaddle/book/blob/develop/.tools/build_docker.sh，並參見下文。大家可以把自己基於PaddlePaddle開發的應用發佈出來，便於用戶在單機和Kubernetes機羣上運行。

上述書籍鏡像都是基於PaddlePaddle的生產環境鏡像（productioniamge）構建的。生產環境鏡像是任何PaddlePaddle應用鏡像的基礎，其中只包括build好的PaddlePaddle以及Python等必要的依賴，這樣使其體積儘量小。目前PaddlePaddle社區維護以下四種生產鏡像，分別對應包括不同CPU和GPU指令集的程序。

其中GPU版本鏡像由於包含CUDAdriver，體積會略大於純CPU版本的鏡像。而no-AVX鏡像則提供可以兼容部分較早型號的不支持AVX指令集的CPU。也有一些雲服務提供商提供的虛擬機不支持AVX指令集。

我們可以執行生產鏡像，利用其中編譯好的PaddlePaddle來執行我們的應用程序：

這個例子裏，/work目錄爲保存run.py文件的目錄，run.py程序和其依賴以及數據都會放在這個目錄下，通過-v參數掛載到容器中，運行run.py即可啓動我們的訓練任務。

對於更加複雜的深度學習應用，比如應用可能依賴官方Docker鏡像之外的庫，用戶可以直接基於PaddlePaddle的生產環境鏡像打包自己的應用，創建如下的Dockerfile:

使用諸如此類的Dockerfile即可根據用戶的需要構建自己的鏡像並應用於實際生產環境。

我們將PaddlePaddle的Docker鏡像區分爲生產環境和開發環境。生產環境僅包含應用運行必要的動態連接庫，三方庫和應用二進制文件；而開發環境則需要提供Paddle源代碼、頭文件、編譯工具以及豐富的開發工具，包括：

開發環境鏡像會極大的方便以下角色的工作：1.深度學習應用開發者：不再需要安裝配置一臺UbuntuLinux機器並安裝大量的依賴，只需要安裝Docker。這樣開發者可以使用自己的電腦或者遠程的開發服務器都可以。2.Paddle版本發佈工程師：Paddle後續的版本發佈更新均使用開發環境Docker鏡像，根據Paddle的github分支／標籤直接生成多個Paddle生產環境Docker鏡像3.文檔編寫／Paddle網站更新：Paddle的文檔通常是以「.md/.rst」格式保存在github上的，並隨着源代碼的更新而更新。文檔和網站內容都是通過github的這些文檔生成的，開發環境鏡像會提供相應的工具，將「.md/.rst」格式解壓、轉換並生成html頁面。

下面介紹如何使用開發環境鏡像。考慮我們完成日常工作的方式，開發者可能會使用自己的筆記本／臺式機／安裝有GPU的工作站：

許多開發者會使用一臺遠程的安裝了GPU的機器完成日常的開發工作，他們通常會ssh登錄到這臺服務器上開發。開發環境鏡像也提供了sshd服務，這樣開發者可以直接ssh登錄到PaddlePaddle的開發環境容器中啓動訓練任務：

一個基本思路是:使用gitclone下載PaddlePaddle源碼到開發機或本地，然後就可以使用自己慣用的編輯器（如Eclipse／VIM）開始代碼編寫工作。編譯和測試則可以使用dockerrun-v掛載Paddle源代碼目錄到Docker開發環境鏡像。這樣就可以在Docker容器中直接編譯和測試剛纔修改的代碼：

您可以使用下面的命令快速下載並啓動一個PaddlePaddle開發環境的容器，並啓動一個sshd服務。在https://hub.docker.com/r/paddlepaddle/paddle/tags/找到您需要的版本替換<version>。

PaddlePaddle團隊將以易用性爲目標，持續更新，爲AI從業者和對深度學習感興趣的同學提供更方便的鏡像和工具，把深度學習帶給更多的人！

PaddlePaddle是一個最早由百度科學家和工程師共同研發的並行分佈式深度學習平臺，兼備易用性、高效性、靈活性和可擴展性，目前已被百度內部多個產品線廣泛使用。

PaddlePaddle目前已經開放源碼,但是遠未完善，我們希望能在這個基礎上不斷的改進、擴展和延伸。同時我們希望廣大開發者積極提供反饋和貢獻源代碼，建立一個活躍的開源社區。

據介紹，PaddlePaddle是一個小而美的團隊、核心成員10人左右、系統工程師爲主、全部使用Github辦公。